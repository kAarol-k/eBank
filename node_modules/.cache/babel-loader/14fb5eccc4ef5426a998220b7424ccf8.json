{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k.kobus\\\\Downloads\\\\eBankGo-main\\\\ebankgo-main\\\\src\\\\Content.js\";\nimport React from 'react';\nimport './Content.css';\nimport Button from './Button';\nimport tele from './resources/telefony.png';\nimport Info from './Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  class TypeWriter {\n    constructor(txtElement, words, wait = 3000) {\n      this.txtElement = txtElement;\n      this.words = words;\n      this.txt = '';\n      this.wordIndex = 0;\n      this.wait = parseInt(wait, 10);\n      this.type();\n      this.isDeleting = false;\n    }\n\n    type() {\n      // Current index of word\n      const current = this.wordIndex % this.words.length; // Get full text of current word\n\n      const fullTxt = this.words[current]; // Check if deleting\n\n      if (this.isDeleting) {\n        // Remove char\n        this.txt = fullTxt.substring(0, this.txt.length - 1);\n      } else {\n        // Add char\n        this.txt = fullTxt.substring(0, this.txt.length + 1);\n      } // Insert txt into element\n\n\n      this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`; // Initial Type Speed\n\n      let typeSpeed = 100;\n\n      if (this.isDeleting) {\n        typeSpeed /= 4;\n      } // If word is complete\n\n\n      if (!this.isDeleting && this.txt === fullTxt) {\n        // Make pause at end\n        typeSpeed = this.wait; // Set delete to true\n\n        this.isDeleting = true;\n      } else if (this.isDeleting && this.txt === '') {\n        this.isDeleting = false; // Move to next word\n\n        this.wordIndex++; // Pause before start typing\n\n        typeSpeed = 500;\n      }\n\n      setTimeout(() => this.type(), typeSpeed);\n    }\n\n  } // Init On DOM Load\n\n\n  document.addEventListener('DOMContentLoaded', init); // Init App\n\n  function init() {\n    const txtElement = document.querySelector('.txt-type');\n    const words = JSON.parse(txtElement.getAttribute('data-words'));\n    const wait = txtElement.getAttribute('data-wait'); // Init TypeWriter\n\n    new TypeWriter(txtElement, words, wait);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content__text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Aplikacja Mobilna eBank Go. \", /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"txt-type green\",\n            \"data-wait\": \"3000\",\n            \"data-words\": \"[\\\"Prosto\\\", \\\"Szybko\\\", \\\"Bezpiecznie\\\"]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content__image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tele\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["C:/Users/k.kobus/Downloads/eBankGo-main/ebankgo-main/src/Content.js"],"names":["React","Button","tele","Info","Content","TypeWriter","constructor","txtElement","words","wait","txt","wordIndex","parseInt","type","isDeleting","current","length","fullTxt","substring","innerHTML","typeSpeed","setTimeout","document","addEventListener","init","querySelector","JSON","parse","getAttribute"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Content.css'\nimport Button from './Button'\nimport tele from './resources/telefony.png'\nimport Info from './Info'\nfunction Content() {\n    class TypeWriter {\n        constructor(txtElement, words, wait = 3000) {\n          this.txtElement = txtElement;\n          this.words = words;\n          this.txt = '';\n          this.wordIndex = 0;\n          this.wait = parseInt(wait, 10);\n          this.type();\n          this.isDeleting = false;\n        }\n      \n        type() {\n          // Current index of word\n          const current = this.wordIndex % this.words.length;\n          // Get full text of current word\n          const fullTxt = this.words[current];\n      \n          // Check if deleting\n          if(this.isDeleting) {\n            // Remove char\n            this.txt = fullTxt.substring(0, this.txt.length - 1);\n          } else {\n            // Add char\n            this.txt = fullTxt.substring(0, this.txt.length + 1);\n          }\n      \n          // Insert txt into element\n          this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`;\n      \n          // Initial Type Speed\n          let typeSpeed = 100;\n      \n          if(this.isDeleting) {\n            typeSpeed /= 4;\n          }\n      \n          // If word is complete\n          if(!this.isDeleting && this.txt === fullTxt) {\n            // Make pause at end\n            typeSpeed = this.wait;\n            // Set delete to true\n            this.isDeleting = true;\n          } else if(this.isDeleting && this.txt === '') {\n            this.isDeleting = false;\n            // Move to next word\n            this.wordIndex++;\n            // Pause before start typing\n            typeSpeed = 500;\n          }\n      \n          setTimeout(() => this.type(), typeSpeed);\n        }\n      }\n      \n      \n      // Init On DOM Load\n      document.addEventListener('DOMContentLoaded', init);\n      \n      // Init App\n      function init() {\n        const txtElement = document.querySelector('.txt-type');\n        const words = JSON.parse(txtElement.getAttribute('data-words'));\n        const wait = txtElement.getAttribute('data-wait');\n        // Init TypeWriter\n        new TypeWriter(txtElement, words, wait);\n      }\n    return (\n        <>\n        <div className=\"Content__container\">\n            <div className=\"Content__text\">\n                <p>Aplikacja Mobilna eBank Go. <span class=\"txt-type green\" data-wait=\"3000\" data-words='[\"Prosto\", \"Szybko\", \"Bezpiecznie\"]'></span></p>\n                <Button />\n            </div>\n            <div className=\"Content__image\"><img src={tele}></img></div>\n        </div>\n        <Info />\n        </>\n    )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}